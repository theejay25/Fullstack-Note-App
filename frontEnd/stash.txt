import { useState } from "react";
import axios from "axios";

const Form = () => {
  const [signUpData, setSignUpData] = useState({
    email: "",
    password: "",
    username: "",
    confirmPassword: ""
  });

  const [signInData, setSignInData] = useState({
    email: "",
    password: ""
  });

  const handleSignUpChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setSignUpData(prev => ({ ...prev, [name]: value }));
  };

  const handleSignInChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setSignInData(prev => ({ ...prev, [name]: value }));
  };

  const handleSignUp = async (e: React.FormEvent) => {
    e.preventDefault();

    if (signUpData.password !== signUpData.confirmPassword) {
      alert("Passwords do not match!");
      return;
    }

    try {
      const res = await axios.post("http://localhost:8080/api/signup", {
        email: signUpData.email,
        password: signUpData.password,
        username: signUpData.username
      });

      console.log("Signup successful:", res.data);

      // Reset form
      setSignUpData({
        email: "",
        password: "",
        username: "",
        confirmPassword: ""
      });

    } catch (err) {
      console.error("Signup failed:", err);
    }
  };

  const handleSignIn = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      const res = await axios.post("http://localhost:8080/api/signin", signInData);
      console.log("Signin successful:", res.data);

      // Reset form
      setSignInData({ email: "", password: "" });

    } catch (err) {
      console.error("Signin failed:", err);
    }
  };

  return (
    <div className="form-wrapper">
      {/* Sign Up Form */}
      <form onSubmit={handleSignUp}>
        <h2>Sign Up</h2>
        <input
          type="text"
          name="username"
          placeholder="Username"
          value={signUpData.username}
          onChange={handleSignUpChange}
        />
        <input
          type="email"
          name="email"
          placeholder="Email"
          value={signUpData.email}
          onChange={handleSignUpChange}
        />
        <input
          type="password"
          name="password"
          placeholder="Password"
          value={signUpData.password}
          onChange={handleSignUpChange}
        />
        <input
          type="password"
          name="confirmPassword"
          placeholder="Confirm Password"
          value={signUpData.confirmPassword}
          onChange={handleSignUpChange}
        />
        <button type="submit">Sign Up</button>
      </form>

      {/* Sign In Form */}
      <form onSubmit={handleSignIn}>
        <h2>Sign In</h2>
        <input
          type="email"
          name="email"
          placeholder="Email"
          value={signInData.email}
          onChange={handleSignInChange}
        />
        <input
          type="password"
          name="password"
          placeholder="Password"
          value={signInData.password}
          onChange={handleSignInChange}
        />
        <button type="submit">Sign In</button>
      </form>
    </div>
  );
};

export default Form;
